<?php

declare(strict_types=1);

namespace App\Game\GameTypes\Classic\Behaviors;

use App\Game\Behaviors\BaseCellBehavior;
use App\Game\Data\Cell;
use App\Game\Data\CellPosition;
use App\Game\Data\Context;
use App\Game\Data\Entity;
use App\Game\Data\EntityStateItem;
use App\Game\Data\EntityType;
use App\Game\Models\GameState;
use Illuminate\Support\Collection;

class TrapCellBehavior extends BaseCellBehavior
{
    public function onEnter(GameState $gameState, Entity $entity, CellPosition $prevPosition, Cell $cell, CellPosition $position): void
    {
        $teammatePlayerIds = $gameState->players
            ->where('team_id', $gameState->players->where('id', $entity->gamePlayerId)->firstOrFail()->team_id)
            ->pluck('id', 'id');

        $teammatePirates = $gameState->entities
            ->filter(fn (Entity $e) => $e->type === EntityType::Pirate
                && $e->position->is($position)
                && $teammatePlayerIds->has($e->gamePlayerId)
                && $e->isNot($entity));

        if ($teammatePirates->isEmpty()) {
            $updatedEntity = $entity->updateState->set(EntityStateItem::StuckInTrap->value, true);
            $gameState->entities = $gameState->entities->updateEntity($updatedEntity);
        } else {
            $teammatePirates
                ->filter(fn (Entity $e) => $e->state->bool(EntityStateItem::StuckInTrap->value))
                ->each(function (Entity $e) use ($gameState) {
                    $updatedEntity = $e->updateState->unset(EntityStateItem::StuckInTrap->value);
                    $gameState->entities = $gameState->entities->updateEntity($updatedEntity);
                });
        }
    }

    public function processPossibleTurns(Collection $possibleTurns, Entity $entity, Collection $entities, Context $context): Collection
    {
        if ($entity->state->bool(EntityStateItem::StuckInTrap->value)) {
            $possibleTurns = collect();
        }

        return parent::processPossibleTurns($possibleTurns, $entity, $entities, $context); // TODO: Change the autogenerated stub
    }
}
